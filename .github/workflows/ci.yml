name: CI

on:
  push:
    branches: [ main, feature-* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:ci
    
    - name: Display coverage report
      if: matrix.node-version == '20.x'
      run: |
        echo "📊 Code Coverage Report"
        echo "======================"
        npx jest --coverage --coverageReporters=text-summary --silent 2>/dev/null | tail -n 10
        echo ""
        echo "📁 Detailed coverage saved to ./coverage directory"

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Verify build artifacts
      run: |
        test -f dist/servers/persona.js
        test -f dist/types/index.d.ts
        test -f dist/base/McpServerBase.js
    
    - name: Test built distribution
      run: |
        node dist/servers/persona.js --version || echo "Version check completed"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check TypeScript compilation
      run: npx tsc --noEmit