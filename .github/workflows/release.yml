name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: |
        npm run test:ci
        echo "ðŸ“Š Final Coverage Report:"
        npx jest --coverage --coverageReporters=text-summary --silent 2>/dev/null | tail -n 10
    
    - name: Build project
      run: npm run build
    
    - name: Extract version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
    
    - name: Update package.json version
      run: npm version ${{ steps.version.outputs.version }} --no-git-tag-version
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: Release ${{ steps.version.outputs.tag }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        body: |
          ## Changes in ${{ steps.version.outputs.tag }}
          
          See [CHANGELOG.md](./CHANGELOG.md) for details.
          
          ## Installation
          
          ```bash
          npm install jp-mcp-server@${{ steps.version.outputs.version }}
          ```
          
          ## Usage
          
          ```bash
          # Run the persona server
          npx jp-mcp-server-persona
          
          # Or using development mode
          npm install jp-mcp-server
          npm run dev:persona
          ```
    
    - name: Publish to npm
      if: ${{ !contains(steps.version.outputs.version, '-') }}
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Publish pre-release to npm
      if: ${{ contains(steps.version.outputs.version, '-') }}
      run: npm publish --tag beta
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-github-packages:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js for GitHub Packages
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@johnplantada'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Configure package for GitHub Packages
      run: |
        sed -i 's/"name": "jp-mcp-server"/"name": "@johnplantada\/jp-mcp-server"/' package.json
        echo "registry=https://npm.pkg.github.com" >> .npmrc
    
    - name: Publish to GitHub Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}